Triggers: Any physObj with a trigger above 0 assumes it's only meant to be a trigger and disables its dynamics and collisions
To override this behaviour, use OverridePhysicsBodyTriggerDynamics(PhysicsBody body, false);

Tag = item entering a trigger / item which should have that number tag on it
Trigger = items which are triggered when the tag enters they hit box

Layers:
    (0): Default (almost all)
    (1): PistonDoors

Layer Matrix
╔═══╦═══╦═══╗
║ - ║ 0 ║ 1 ║
╠═══╬═══╬═══╣
║ 1 ║ Y ║ N ║
╠═══╬═══╬═══╝
║ 0 ║ Y ║
╚═══╩═══╝


Reserved tags / trigger + recommended ranges
    (1):
        Tag     -> Crate (grabbable object)
        Trigger -> Player grab area
    (2):
        Tag     -> Player
        Trigger -> All triggers greater than 8
    (3):
        Tag     -> Player
        Trigger -> Next level
    (4):
        Tag     -> Player
        Trigger -> Death trigger
            Fade to black
    (5):
        Tag     -> None
        Trigger -> Temporary trigger for disabled physics objects
    (6):
        Tag     -> PistonDoor
        Trigger -> Crate
        
    (17-65) (only 17 + 18 is implemented)
        Tag     -> (none - implicitly Player (Tag 2) )
        Trigger -> Button (used to then activate Wires and Doors with matching IDs)

    (65-129) (does not need to be implemented, allocated dynamically when reading .sf file)
        Tag     -> (none - implicitly Player (Tag 2) )
        Trigger -> Text prompt

    (130-131)
        Tag     -> (none - implicitly Player (Tag 2) )
        Trigger -> Special conditional text for level 2 (if hit button while not in dimension / hit portal before button...)

    (132-147): (DO NOT CHANGE THESE TRIGGER IDS, IF YOU DO, CHANGE VALUE ADDED IN dataHandling IN parseStructGroupInfo, currentDimension in raylib_game, and properties in levelObjects)
        Tag     -> (none - implicitly Player (Tag 2) )
        Trigger -> Portals
            Individual Values for portals: 

            Red    - 132
            Blue   - 133
            Yellow - 134
            Green 0- 135
            Green 1- 136
            Green 2- 137
            Green 3- 138
            Green 4- 139
            Green 5- 140
            Green 6- 141
            Green 7- 142
            Green 8- 143
            Green 9- 144
            Green 10-145
            Green 11-146
            Green 12-147

Player's tags must be manually assigned in code

Every object has a triggerId and can have up to 32 tags on them
    AKA each objectFunction can be activated by up to 32 different triggers
If bodyA has a tag for the triggerId of bodyB, that triggerId is activated
Each triggerId can have multiple events associated with it (eg. Text is activated and some condition is checked)

PhysObjs are used to detect when an object with a tag hits a trigger. 
When it's activated, the TriggerEvent function associated with that trigger is executed

ColourID for each dimension
    1 - Red
    2 - Blue
    3 - Green
    4 - Yellow

bolded font ->: final statement (click to dismiss)
red = default

bridge: L3

death triggers:
    L3: die in gap

YOU STAY IN A DIMENSION AFTER DEATH


phase -> move item DIMENSION

unexepcted key changes after each level

DIMENSIONS COLLAPSE AFTER 15 SECONDS
BUTTONS ARE PERMANENT (?)

/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E


lvl7 -> fade to black "do you really think you can escape you can't" fade out to "the end"


TODO: Press any key to cancel textBox

boss will have boss bar
how attack work - spacebar to cycle DIMENSIONS

AddTag / RemoveTag

n=0; for f in {1..19}; do mv "$f.png" "$((n++)).png"; done





Red dimension
- can use buttons
- speed doubled
Blue dimension
- speed halved
- can walk over gaps

WIRE ID TO Level
level2 - 0
level3 - 1
level4 - 2
level5_left  - 3
level5_right - 4
level6 - 5
level7 - 6


WARNING: scriptName[functionName] - Debug message
INFO: moduleName - Debug message
